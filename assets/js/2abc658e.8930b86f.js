"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[765],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(m,l(l({ref:t},s),{},{components:r})):n.createElement(m,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8365:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],c={},i="Transfer1155Module",u={unversionedId:"other/notional/Transfer1155Module",id:"other/notional/Transfer1155Module",title:"Transfer1155Module",description:"Module to allow the Ladle to transfer ERC1155 tokens",source:"@site/docs/other/notional/Transfer1155Module.md",sourceDirName:"other/notional",slug:"/other/notional/Transfer1155Module",permalink:"/yield-docs/docs/other/notional/Transfer1155Module",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/other/notional/Transfer1155Module.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NotionalMultiOracle",permalink:"/yield-docs/docs/other/notional/NotionalMultiOracle"},next:{title:"Giver",permalink:"/yield-docs/docs/utils/Giver"}},s={},d=[{value:"constructor",id:"constructor",level:3},{value:"transfer1155",id:"transfer1155",level:3}],p={toc:d};function f(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"transfer1155module"},"Transfer1155Module"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Module to allow the Ladle to transfer ERC1155 tokens")),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(contract ICauldron cauldron, contract IWETH9 weth) public\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"We won't use these, but still we need them in the constructor to not be abstract.")),(0,a.kt)("h3",{id:"transfer1155"},"transfer1155"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer1155(contract ERC1155 token, uint256 id, address receiver, uint128 wad, bytes data) external payable\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Allow users to trigger an ERC1155 token transfer from themselves to a receiver through the ladle, to be used with batch")))}f.isMDXComponent=!0}}]);