"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[7458],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=i(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||c;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var i=2;i<c;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7902:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p}});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),a=["components"],l={},u="CTokenMultiOracle",i={unversionedId:"developers/contracts/oracles/compound/CTokenMultiOracle",id:"developers/contracts/oracles/compound/CTokenMultiOracle",title:"CTokenMultiOracle",description:"SourceSet",source:"@site/docs/developers/contracts/oracles/compound/CTokenMultiOracle.md",sourceDirName:"developers/contracts/oracles/compound",slug:"/developers/contracts/oracles/compound/CTokenMultiOracle",permalink:"/yield-docs/developers/contracts/oracles/compound/CTokenMultiOracle",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/developers/contracts/oracles/compound/CTokenMultiOracle.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CTokenInterface",permalink:"/yield-docs/developers/contracts/oracles/compound/CTokenInterface"},next:{title:"CompoundMultiOracle",permalink:"/yield-docs/developers/contracts/oracles/compound/CompoundMultiOracle"}},s={},p=[{value:"SourceSet",id:"sourceset",level:3},{value:"Source",id:"source",level:3},{value:"sources",id:"sources",level:3},{value:"setSource",id:"setsource",level:3},{value:"peek",id:"peek",level:3},{value:"get",id:"get",level:3}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"ctokenmultioracle"},"CTokenMultiOracle"),(0,c.kt)("h3",{id:"sourceset"},"SourceSet"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"event SourceSet(bytes6 baseId, bytes6 quoteId, contract CTokenInterface cToken)\n")),(0,c.kt)("h3",{id:"source"},"Source"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Source {\n  contract CTokenInterface source;\n  uint8 baseDecimals;\n  uint8 quoteDecimals;\n  bool inverse;\n}\n")),(0,c.kt)("h3",{id:"sources"},"sources"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes6 => mapping(bytes6 => struct CTokenMultiOracle.Source)) sources\n")),(0,c.kt)("h3",{id:"setsource"},"setSource"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"function setSource(bytes6 cTokenId, bytes6 underlyingId, contract CTokenInterface cToken) external\n")),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"Set or reset an oracle source and its inverse")),(0,c.kt)("h3",{id:"peek"},"peek"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"function peek(bytes32 base, bytes32 quote, uint256 amountBase) external view virtual returns (uint256 amountQuote, uint256 updateTime)\n")),(0,c.kt)("p",null,"Retrieve the value of the amount at the latest oracle price."),(0,c.kt)("h3",{id:"get"},"get"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"function get(bytes32 base, bytes32 quote, uint256 amountBase) external virtual returns (uint256 amountQuote, uint256 updateTime)\n")),(0,c.kt)("p",null,"Retrieve the value of the amount at the latest oracle price. Updates the price before fetching it if possible."))}m.isMDXComponent=!0}}]);