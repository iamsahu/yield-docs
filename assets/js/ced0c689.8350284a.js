"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[1997],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),f=a,v=p["".concat(c,".").concat(f)]||p[f]||d[f]||l;return n?r.createElement(v,o(o({ref:t},u),{},{components:n})):r.createElement(v,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5656:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},c=void 0,s={unversionedId:"developers/technical_reference/vault/Wand",id:"developers/technical_reference/vault/Wand",title:"Wand",description:"Ladle orchestrates contract calls throughout the Yield Protocol v2 into useful and efficient governance features.",source:"@site/docs/developers/technical_reference/vault/Wand.md",sourceDirName:"developers/technical_reference/vault",slug:"/developers/technical_reference/vault/Wand",permalink:"/yield-docs/developers/technical_reference/vault/Wand",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/developers/technical_reference/vault/Wand.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Router",permalink:"/yield-docs/developers/technical_reference/vault/Router"},next:{title:"Witch",permalink:"/yield-docs/developers/technical_reference/vault/Witch"}},u={},d=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"point",id:"point",level:3},{value:"addAsset",id:"addasset",level:3},{value:"makeBase",id:"makebase",level:3},{value:"makeIlk",id:"makeilk",level:3},{value:"addSeries",id:"addseries",level:3},{value:"Events",id:"events",level:2},{value:"Point",id:"point-1",level:3}],p={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Ladle orchestrates contract calls throughout the Yield Protocol v2 into useful and efficient governance features."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function constructor(\n  ) public\n")),(0,l.kt)("h3",{id:"point"},"point"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function point(\n  ) external\n")),(0,l.kt)("p",null,"Point to a different cauldron, ladle, witch, poolFactory, joinFactory or fyTokenFactory"),(0,l.kt)("h3",{id:"addasset"},"addAsset"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addAsset(\n  ) external\n")),(0,l.kt)("p",null,"Add an existing asset to the protocol, meaning:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add the asset to the cauldron"),(0,l.kt)("li",{parentName:"ul"},"Deploy a new Join, and integrate it with the Ladle"),(0,l.kt)("li",{parentName:"ul"},"If the asset is a base, integrate its rate source"),(0,l.kt)("li",{parentName:"ul"},"If the asset is a base, integrate a spot source and set a debt ceiling for any provided ilks")),(0,l.kt)("h3",{id:"makebase"},"makeBase"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function makeBase(\n  ) external\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"oracle")," must be able to deliver a value for assetId and 'rate'\nMake a base asset out of a generic asset."),(0,l.kt)("h3",{id:"makeilk"},"makeIlk"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function makeIlk(\n  ) external\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"oracle")," must be able to deliver a value for baseId and ilkId\nMake an ilk asset out of a generic asset."),(0,l.kt)("h3",{id:"addseries"},"addSeries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addSeries(\n  ) external\n")),(0,l.kt)("p",null,"Add an existing series to the protocol, by deploying a FYToken, and registering it in the cauldron with the approved ilks\nThis must be followed by a call to addPool"),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"point-1"},"Point"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  event Point(\n  )\n")))}f.isMDXComponent=!0}}]);