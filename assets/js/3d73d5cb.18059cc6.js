"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[5374],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||n;return r?a.createElement(h,o(o({ref:t},u),{},{components:r})):a.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,o=new Array(n);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<n;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5907:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=r(7462),i=r(3366),n=(r(7294),r(3905)),o=["components"],l={},s='The "Yieldcurity" Standard',p={unversionedId:"operations/code_reviews",id:"operations/code_reviews",title:'The "Yieldcurity" Standard',description:"Opinionated security, code quality standards, and code review policies and procedures for Solidity smart contracts.  Inspired by and fully incorporating The Solcurity Standard.",source:"@site/docs/operations/code_reviews.md",sourceDirName:"operations",slug:"/operations/code_reviews",permalink:"/yield-docs/operations/code_reviews",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/operations/code_reviews.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to Manually Verify a Timelock Proposal",permalink:"/yield-docs/governance/verify_proposal"},next:{title:"Deployment",permalink:"/yield-docs/operations/deployment"}},u={},c=[{value:"Code author creates pull request:",id:"code-author-creates-pull-request",level:3},{value:"Code author leads video review session:",id:"code-author-leads-video-review-session",level:3},{value:"Reviewers:",id:"reviewers",level:3},{value:"Code Author obtains final approval and merges PR:",id:"code-author-obtains-final-approval-and-merges-pr",level:3}],d={toc:c};function m(e){var t=e.components,r=(0,i.Z)(e,o);return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-yieldcurity-standard"},'The "Yieldcurity" Standard'),(0,n.kt)("p",null,"Opinionated ",(0,n.kt)("strong",{parentName:"p"},"security"),", ",(0,n.kt)("strong",{parentName:"p"},"code quality")," standards, and ",(0,n.kt)("strong",{parentName:"p"},"code review policies and procedures")," for ",(0,n.kt)("strong",{parentName:"p"},"Solidity")," smart contracts.  Inspired by and fully incorporating ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Rari-Capital/solcurity"},"The Solcurity Standard"),"."),(0,n.kt)("h3",{id:"code-author-creates-pull-request"},"Code author creates pull request:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Include a ",(0,n.kt)("strong",{parentName:"li"},"meaningful description")," explaining the change - highlight areas of ",(0,n.kt)("strong",{parentName:"li"},"risk")," or ",(0,n.kt)("strong",{parentName:"li"},"complexity")),(0,n.kt)("li",{parentName:"ul"},"Reference Github issue"),(0,n.kt)("li",{parentName:"ul"},"Include ",(0,n.kt)("a",{parentName:"li",href:"https://hardhat.org/plugins/hardhat-gas-reporter.html"},"hardhat-gas-reporter")," report.  If updating pre-existing code, include both before and after reports"),(0,n.kt)("li",{parentName:"ul"},"Include report from ",(0,n.kt)("a",{parentName:"li",href:"https://docs.soliditylang.org/en/v0.8.7/smtchecker.html"},"SMTChecker")," or other analysis if conducted"),(0,n.kt)("li",{parentName:"ul"},"Assign a ",(0,n.kt)("strong",{parentName:"li"},"priority tag")," to the PR if it needs to be done faster than 3 days"),(0,n.kt)("li",{parentName:"ul"},"Assign reviewers"),(0,n.kt)("li",{parentName:"ul"},"Schedule a time for video review - add details (time/Zoom link) in PR description"),(0,n.kt)("li",{parentName:"ul"},"Consider inviting persons outside the smart contract team (ie front end) or non devs (marketing etc) when demoing a new feature or important change"),(0,n.kt)("li",{parentName:"ul"},"Notify invitees/reviewers")),(0,n.kt)("h3",{id:"code-author-leads-video-review-session"},"Code author leads video review session:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Record the session"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Explain context")," of change"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Demo")," the change if possible"),(0,n.kt)("li",{parentName:"ul"},"For bug fixes, explain or demo the broken version vs the fixed version"),(0,n.kt)("li",{parentName:"ul"},"Highlight areas of ",(0,n.kt)("strong",{parentName:"li"},"risk or complexity")),(0,n.kt)("li",{parentName:"ul"},"Explain tests if they help understand the new code changes or if there is particular complexity in the tests themselves, otherwise, leave it to the reviewers to think about a testing approach on their own before reviewing the tests")),(0,n.kt)("h3",{id:"reviewers"},"Reviewers:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reviewers should conduct an independent, thorough review"),(0,n.kt)("li",{parentName:"ul"},"Normally, the review should be completed within 3 days of being notified (faster if priority tagged)"),(0,n.kt)("li",{parentName:"ul"},"Refer to the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity"},"Solcurity smart contract code quality standards")),(0,n.kt)("li",{parentName:"ul"},"Some general  tips:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Construct a mental model of what you expect the contracts to look like before checking out the code.  Compare the architecture to your mental model. Look into areas that are surprising"),(0,n.kt)("li",{parentName:"ul"},"Look at areas that can do ",(0,n.kt)("strong",{parentName:"li"},"value exchange")),(0,n.kt)("li",{parentName:"ul"},"Look at areas that ",(0,n.kt)("strong",{parentName:"li"},"interface with external")," contracts and ensure all assumptions about them are valid"),(0,n.kt)("li",{parentName:"ul"},"Create a threat model and make a list of theoretical high level attack vectors"),(0,n.kt)("li",{parentName:"ul"},"Do another review from the perspective of every actor in the threat model"))),(0,n.kt)("li",{parentName:"ul"},"Go through the Solcurity standards checklist for each of the following:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#events"},"Events")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#structs"},"Structs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#modifiers"},"Modifiers")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#variables"},"Variables")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#functions"},"Functions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#external-calls"},"External Calls")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#static-calls"},"Static Calls")))),(0,n.kt)("li",{parentName:"ul"},"Consider these additional Yield security precautions:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Never ever allow users to call arbitrary contracts from our contracts. Either use auth or some kind of whitelist."))),(0,n.kt)("li",{parentName:"ul"},"After reviewing the code changes, see the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#events"},"Code"),", ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#events"},"Contract"),", and ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Rari-Capital/solcurity#events"},"DeFi")," checklists"),(0,n.kt)("li",{parentName:"ul"},"Before reviewing tests, construct a mental model of how you would approach testing:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Are ",(0,n.kt)("strong",{parentName:"li"},"realistic")," scenarios/values used in tests?"),(0,n.kt)("li",{parentName:"ul"},"Are all important ",(0,n.kt)("strong",{parentName:"li"},"edge cases")," and states being tested?"),(0,n.kt)("li",{parentName:"ul"},"For bug fixes, is there a new test that would have caught the bug?"),(0,n.kt)("li",{parentName:"ul"},"If there are any issues that should hold up merge, mark the PR as ",(0,n.kt)("strong",{parentName:"li"},"Changes Requested")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Approve")," If completely comfortable with the changes")))),(0,n.kt)("h3",{id:"code-author-obtains-final-approval-and-merges-pr"},"Code Author obtains final approval and merges PR:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Address any comments or changes requested, ",(0,n.kt)("em",{parentName:"li"},"be sure to mark comments as resolved")),(0,n.kt)("li",{parentName:"ul"},"Notify reviewers if any changes are made to obtain final approval"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Must have at least 1 approval prior to merge")),(0,n.kt)("li",{parentName:"ul"},"Merge PR and close related Github issue")))}m.isMDXComponent=!0}}]);