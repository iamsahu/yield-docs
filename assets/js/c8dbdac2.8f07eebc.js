"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[2291],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,c(c({ref:t},s),{},{components:n})):r.createElement(m,c({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var u=2;u<o;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5219:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],l={},i="FCashMock",u={unversionedId:"developers/contracts/other/notional/FCashMock",id:"developers/contracts/other/notional/FCashMock",title:"FCashMock",description:"underlying",source:"@site/docs/developers/contracts/other/notional/FCashMock.md",sourceDirName:"developers/contracts/other/notional",slug:"/developers/contracts/other/notional/FCashMock",permalink:"/yield-docs/developers/contracts/other/notional/FCashMock",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/developers/contracts/other/notional/FCashMock.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ERC1155Mock",permalink:"/yield-docs/developers/contracts/other/notional/ERC1155Mock"},next:{title:"IBatchAction",permalink:"/yield-docs/developers/contracts/other/notional/IBatchAction"}},s={},d=[{value:"underlying",id:"underlying",level:3},{value:"fCashId",id:"fcashid",level:3},{value:"accrual",id:"accrual",level:3},{value:"constructor",id:"constructor",level:3},{value:"uri",id:"uri",level:3},{value:"setAccrual",id:"setaccrual",level:3},{value:"mint",id:"mint",level:3},{value:"batchBalanceAction",id:"batchbalanceaction",level:3}],p={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fcashmock"},"FCashMock"),(0,o.kt)("h3",{id:"underlying"},"underlying"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ERC20Mock underlying\n")),(0,o.kt)("h3",{id:"fcashid"},"fCashId"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 fCashId\n")),(0,o.kt)("h3",{id:"accrual"},"accrual"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 accrual\n")),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(contract ERC20Mock underlying_, uint256 fCashId_) public\n")),(0,o.kt)("h3",{id:"uri"},"uri"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function uri(uint256) public view virtual returns (string)\n")),(0,o.kt)("h3",{id:"setaccrual"},"setAccrual"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function setAccrual(uint256 accrual_) external\n")),(0,o.kt)("h3",{id:"mint"},"mint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function mint(address to, uint256 id, uint256 amount, bytes data) external\n")),(0,o.kt)("h3",{id:"batchbalanceaction"},"batchBalanceAction"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function batchBalanceAction(address account, struct IBatchAction.BalanceAction[] actions) external\n")))}f.isMDXComponent=!0}}]);