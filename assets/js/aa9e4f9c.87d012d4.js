"use strict";(self.webpackChunkyield_docs=self.webpackChunkyield_docs||[]).push([[5740],{3905:function(e,t,a){a.d(t,{Zo:function(){return o},kt:function(){return v}});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=l.createContext({}),s=function(e){var t=l.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=s(e.components);return l.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,d=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),p=s(a),v=n,k=p["".concat(d,".").concat(v)]||p[v]||c[v]||r;return a?l.createElement(k,i(i({ref:t},o),{},{components:a})):l.createElement(k,i({ref:t},o))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=p;var u={};for(var d in t)hasOwnProperty.call(t,d)&&(u[d]=t[d]);u.originalType=e,u.mdxType="string"==typeof e?e:n,i[1]=u;for(var s=2;s<r;s++)i[s]=a[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},3090:function(e,t,a){a.r(t),a.d(t,{assets:function(){return o},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return c}});var l=a(7462),n=a(3366),r=(a(7294),a(3905)),i=["components"],u={},d=void 0,s={unversionedId:"developers/technical_reference/vault/Cauldron",id:"developers/technical_reference/vault/Cauldron",title:"Cauldron",description:"Functions",source:"@site/docs/developers/technical_reference/vault/Cauldron.md",sourceDirName:"developers/technical_reference/vault",slug:"/developers/technical_reference/vault/Cauldron",permalink:"/yield-docs/developers/technical_reference/vault/Cauldron",draft:!1,editUrl:"https://github.com/iamsahu/yield-docs/tree/master/docs/developers/technical_reference/vault/Cauldron.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Strategy",permalink:"/yield-docs/developers/technical_reference/strategy/"},next:{title:"CauldronMath",permalink:"/yield-docs/developers/technical_reference/vault/CauldronMath"}},o={},c=[{value:"Functions",id:"functions",level:2},{value:"addAsset",id:"addasset",level:3},{value:"setDebtLimits",id:"setdebtlimits",level:3},{value:"setLendingOracle",id:"setlendingoracle",level:3},{value:"setSpotOracle",id:"setspotoracle",level:3},{value:"addSeries",id:"addseries",level:3},{value:"addIlks",id:"addilks",level:3},{value:"build",id:"build",level:3},{value:"destroy",id:"destroy",level:3},{value:"_tweak",id:"_tweak",level:3},{value:"tweak",id:"tweak",level:3},{value:"_give",id:"_give",level:3},{value:"give",id:"give",level:3},{value:"vaultData",id:"vaultdata",level:3},{value:"debtFromBase",id:"debtfrombase",level:3},{value:"debtToBase",id:"debttobase",level:3},{value:"stir",id:"stir",level:3},{value:"_pour",id:"_pour",level:3},{value:"pour",id:"pour",level:3},{value:"slurp",id:"slurp",level:3},{value:"roll",id:"roll",level:3},{value:"level",id:"level",level:3},{value:"mature",id:"mature",level:3},{value:"_mature",id:"_mature",level:3},{value:"accrual",id:"accrual",level:3},{value:"_level",id:"_level",level:3},{value:"Events",id:"events",level:2},{value:"AssetAdded",id:"assetadded",level:3},{value:"SeriesAdded",id:"seriesadded",level:3},{value:"IlkAdded",id:"ilkadded",level:3},{value:"SpotOracleAdded",id:"spotoracleadded",level:3},{value:"RateOracleAdded",id:"rateoracleadded",level:3},{value:"DebtLimitsSet",id:"debtlimitsset",level:3},{value:"VaultBuilt",id:"vaultbuilt",level:3},{value:"VaultTweaked",id:"vaulttweaked",level:3},{value:"VaultDestroyed",id:"vaultdestroyed",level:3},{value:"VaultGiven",id:"vaultgiven",level:3},{value:"VaultPoured",id:"vaultpoured",level:3},{value:"VaultStirred",id:"vaultstirred",level:3},{value:"VaultRolled",id:"vaultrolled",level:3},{value:"SeriesMatured",id:"seriesmatured",level:3}],p={toc:c};function v(e){var t=e.components,a=(0,n.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"addasset"},"addAsset"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addAsset(\n  ) external\n")),(0,r.kt)("p",null,"Add a new Asset."),(0,r.kt)("h3",{id:"setdebtlimits"},"setDebtLimits"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setDebtLimits(\n  ) external\n")),(0,r.kt)("p",null,"Set the maximum and minimum debt for an underlying and ilk pair. Can be reset."),(0,r.kt)("h3",{id:"setlendingoracle"},"setLendingOracle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setLendingOracle(\n  ) external\n")),(0,r.kt)("p",null,"Set a rate oracle. Can be reset."),(0,r.kt)("h3",{id:"setspotoracle"},"setSpotOracle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function setSpotOracle(\n  ) external\n")),(0,r.kt)("p",null,"Set a spot oracle and its collateralization ratio. Can be reset."),(0,r.kt)("h3",{id:"addseries"},"addSeries"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addSeries(\n  ) external\n")),(0,r.kt)("p",null,"Add a new series"),(0,r.kt)("h3",{id:"addilks"},"addIlks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function addIlks(\n  ) external\n")),(0,r.kt)("p",null,"Add a new Ilk (approve an asset as collateral for a series)."),(0,r.kt)("h3",{id:"build"},"build"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function build(\n  ) external returns (struct DataTypes.Vault vault)\n")),(0,r.kt)("p",null,"Create a new vault, linked to a series (and therefore underlying) and a collateral"),(0,r.kt)("h3",{id:"destroy"},"destroy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function destroy(\n  ) external\n")),(0,r.kt)("p",null,"Destroy an empty vault. Used to recover gas costs."),(0,r.kt)("h3",{id:"_tweak"},"_tweak"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _tweak(\n  ) internal\n")),(0,r.kt)("p",null,"Change a vault series and/or collateral types."),(0,r.kt)("h3",{id:"tweak"},"tweak"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function tweak(\n  ) external returns (struct DataTypes.Vault vault)\n")),(0,r.kt)("p",null,"Change a vault series and/or collateral types.\nWe can change the series if there is no debt, or assets if there are no assets"),(0,r.kt)("h3",{id:"_give"},"_give"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _give(\n  ) internal returns (struct DataTypes.Vault vault)\n")),(0,r.kt)("p",null,"Transfer a vault to another user."),(0,r.kt)("h3",{id:"give"},"give"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function give(\n  ) external returns (struct DataTypes.Vault vault)\n")),(0,r.kt)("p",null,"Transfer a vault to another user."),(0,r.kt)("h3",{id:"vaultdata"},"vaultData"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function vaultData(\n  ) internal returns (struct DataTypes.Vault vault_, struct DataTypes.Series series_, struct DataTypes.Balances balances_)\n")),(0,r.kt)("h3",{id:"debtfrombase"},"debtFromBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function debtFromBase(\n  ) external returns (uint128 art)\n")),(0,r.kt)("p",null,"Think about rounding up if using, since we are dividing.\nConvert a debt amount for a series from base to fyToken terms."),(0,r.kt)("h3",{id:"debttobase"},"debtToBase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function debtToBase(\n  ) external returns (uint128 base)\n")),(0,r.kt)("p",null,"Convert a debt amount for a series from fyToken to base terms"),(0,r.kt)("h3",{id:"stir"},"stir"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function stir(\n  ) external returns (struct DataTypes.Balances, struct DataTypes.Balances)\n")),(0,r.kt)("p",null,"Move collateral and debt between vaults."),(0,r.kt)("h3",{id:"_pour"},"_pour"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _pour(\n  ) internal returns (struct DataTypes.Balances)\n")),(0,r.kt)("p",null,"Add collateral and borrow from vault, pull assets from and push borrowed asset to user\nOr, repay to vault and remove collateral, pull borrowed asset from and push assets to user"),(0,r.kt)("h3",{id:"pour"},"pour"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function pour(\n  ) external returns (struct DataTypes.Balances)\n")),(0,r.kt)("p",null,"Manipulate a vault, ensuring it is collateralized afterwards.\nTo be used by debt management contracts."),(0,r.kt)("h3",{id:"slurp"},"slurp"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function slurp(\n  ) external returns (struct DataTypes.Balances)\n")),(0,r.kt)("p",null,"Reduce debt and collateral from a vault, ignoring collateralization checks.\nTo be used by liquidation engines."),(0,r.kt)("h3",{id:"roll"},"roll"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function roll(\n  ) external returns (struct DataTypes.Vault, struct DataTypes.Balances)\n")),(0,r.kt)("p",null,"Change series and debt of a vault.\nThe module calling this function also needs to buy underlying in the pool for the new series, and sell it in pool for the old series."),(0,r.kt)("h3",{id:"level"},"level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function level(\n  ) external returns (int256)\n")),(0,r.kt)("p",null,"Return the collateralization level of a vault. It will be negative if undercollateralized."),(0,r.kt)("h3",{id:"mature"},"mature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function mature(\n  ) external\n")),(0,r.kt)("p",null,"Record the borrowing rate at maturity for a series"),(0,r.kt)("h3",{id:"_mature"},"_mature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _mature(\n  ) internal\n")),(0,r.kt)("p",null,"Record the borrowing rate at maturity for a series"),(0,r.kt)("h3",{id:"accrual"},"accrual"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function accrual(\n  ) external returns (uint256)\n")),(0,r.kt)("p",null,"Retrieve the rate accrual since maturity, maturing if necessary."),(0,r.kt)("h3",{id:"_level"},"_level"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _level(\n  ) internal returns (int256)\n")),(0,r.kt)("p",null,"Return the collateralization level of a vault. It will be negative if undercollateralized."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"assetadded"},"AssetAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event AssetAdded(\n  )\n")),(0,r.kt)("h3",{id:"seriesadded"},"SeriesAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event SeriesAdded(\n  )\n")),(0,r.kt)("h3",{id:"ilkadded"},"IlkAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event IlkAdded(\n  )\n")),(0,r.kt)("h3",{id:"spotoracleadded"},"SpotOracleAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event SpotOracleAdded(\n  )\n")),(0,r.kt)("h3",{id:"rateoracleadded"},"RateOracleAdded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event RateOracleAdded(\n  )\n")),(0,r.kt)("h3",{id:"debtlimitsset"},"DebtLimitsSet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event DebtLimitsSet(\n  )\n")),(0,r.kt)("h3",{id:"vaultbuilt"},"VaultBuilt"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultBuilt(\n  )\n")),(0,r.kt)("h3",{id:"vaulttweaked"},"VaultTweaked"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultTweaked(\n  )\n")),(0,r.kt)("h3",{id:"vaultdestroyed"},"VaultDestroyed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultDestroyed(\n  )\n")),(0,r.kt)("h3",{id:"vaultgiven"},"VaultGiven"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultGiven(\n  )\n")),(0,r.kt)("h3",{id:"vaultpoured"},"VaultPoured"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultPoured(\n  )\n")),(0,r.kt)("h3",{id:"vaultstirred"},"VaultStirred"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultStirred(\n  )\n")),(0,r.kt)("h3",{id:"vaultrolled"},"VaultRolled"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event VaultRolled(\n  )\n")),(0,r.kt)("h3",{id:"seriesmatured"},"SeriesMatured"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  event SeriesMatured(\n  )\n")))}v.isMDXComponent=!0}}]);